#include <windows.h>
#include <stdio.h>


FILE* pFile;
long lSize;
char* buffer;
size_t result;
int ecrypt_file_size;
char ecrypt_file_size_str[4];
char key[16];

void loadfile()
{
	/* 若要一个byte不漏地读入整个文件，只能采用二进制方式打开 */
	//pFile = fopen("D:\\troj\\20191110\\tongsha\\VIRUS_Project2.exe", "rb");
	pFile = fopen("InstDrv_infect.bin", "rb");
	if (pFile == NULL)
	{
		fputs("File error", stderr);
	}

	/* 获取文件大小 */
	fseek(pFile, 0, SEEK_END);
	lSize = ftell(pFile);
	rewind(pFile);

	/* 分配内存存储整个文件 */
	buffer = (char*)malloc(sizeof(char) * lSize);
	if (buffer == NULL)
	{
		fputs("Memory error", stderr);
	}

	/* 将文件拷贝到buffer中 */
	result = fread(buffer, 1, lSize, pFile);
	if (result != lSize)
	{
		free(buffer);
		fputs("Reading error", stderr);
	}
	int sign = lSize - 0x18;
	char a = buffer[sign];
	for (int i = 0; i < 4; i++)
	{
		ecrypt_file_size_str[i] = buffer[sign + 4 + i];
	}
	for (int i = 0; i < 16; i++)
	{
		key[i] = buffer[sign + 8 + i];
	}
	ecrypt_file_size = *(int*)ecrypt_file_size_str;


}

void encrypt_file_buffer()
{
	int esi = 0;
	int edi = 0;
	int edx = 0;
	int eax = 0;
	int ecx = 0;
	int ebx = 0;
	char key_table[256] = { 0 };

	for (int i = 0; i < 256; i++)
	{
		key_table[i] = i;
	}
	for (int i = 0; i < 256; i++)
	{
		edx = key_table[esi];
		eax = esi;
		eax = eax & 0xF;
		ecx = edx;
		eax = key[eax];
		edi = (edi + eax + ecx) & 0xFF;
		esi += 1;
		eax = key_table[edi];
		key_table[esi - 1] = eax;
		key_table[edi] = edx;
	}
	ebx = 0;
	esi = 0;
	edi = 0;
	for (int i = 0; i < ecrypt_file_size; i++)
	{
		esi += 1;
		esi = esi & 0xFF;
		edi += 1;
		edx = key_table[esi];
		eax = edx;
		ebx = (ebx + eax) & 0xFF;
		eax = key_table[ebx];
		key_table[esi] = eax;
		key_table[ebx] = edx;
		ecx = key_table[esi];
		eax = edx;
		ecx = (ecx + eax) & 0xFF;
		eax = key_table[ecx];
		buffer[0x6800 + edi - 1] = buffer[0x6800 + edi - 1] ^ eax;
	}
}

void create_encrypt_file()
{
	FILE* pFilenew;
	/* 若要一个byte不漏地读入整个文件，只能采用二进制方式打开 */
	pFilenew = fopen("1.bin", "wb");
	if (pFilenew == NULL)
	{
		fputs("File error", stderr);
	}
	fwrite(&buffer[0x6800], ecrypt_file_size, 1, pFilenew);
	fclose(pFilenew);
}

int main()
{
	loadfile();
	encrypt_file_buffer();
	create_encrypt_file();

	free(buffer);
	fclose(pFile);
	system("pause");
	return 0;

}